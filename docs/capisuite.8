'\" t
.\"     Title: capisuite
.\"    Author: Gernot Hillier <gernot@hillier.de>
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 08/13/2013
.\"    Manual: CapiSuite 0.5.git
.\"    Source: [FIXME: source]
.\"  Language: English
.\"
.TH "CAPISUITE" "8" "08/13/2013" "[FIXME: source]" "CapiSuite 0.5.git"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
capisuite \- Python\-scriptable ISDN telecommunication suite
.SH "DESCRIPTION"
.PP
CapiSuite
is a Python\-scriptable ISDN telecommunication suite\&. It uses the new CAPI interface for accessing your ISDN\-hardware \- so you\*(Aqll need a card for which a CAPI compatible driver is available\&. Currently these are all cards manufactured by AVM and some Eicon cards\&.
.PP
This man page only gives a short introduction, for the real documentation please see the HTML or PDF manual distributed with
CapiSuite\&.
.PP
CapiSuite
tries to give the user the ability to code his own ISDN applications without having to fiddle around with all the dirty programming details like callback functions, data buffers, protocol settings and so on\&.
.PP
I took a scripting language which is (in my opinion) very easy to understand, to use and to learn \- especially for beginners: Python\&. I extended it with some functions providing the basic ISDN "building blocks" for the users application\&. Behind these functions the heart of
CapiSuite
implements all the dirty details a user isn\*(Aqt interested in\&. My goal was to make script\-coding as simple as possible but to also give you the flexibility to realize what you want\&.
.PP
To give you an impression, coding a simple answering machine is as easy as:
.sp .if n \{\ .RS 4 .\} .nf def callIncoming (call, service, call_from, call_to): connect_voice (call, 10) # answer call after 10 secs audio_send (call, "announcemnt\&.la") # play announcement audio_send (call, "beep\&.la") # play beep audio_receive (call, "call\&.la", 10) # record call .fi .if n \{\ .RE .\}
.PP
Of course some details are missing like creating a unique filename or storing the additional information (called and calling party numbers, time, \&.\&.\&.) \- but I assume you got my idea\&.
.PP
And \- don\*(Aqt be afraid \- if you just want to have a normal answering machine or send and receive some fax documents, you can use the default scripts distributed with
CapiSuite\&. They give you already some nice features \- e\&.g\&. the answering machine is multi\-user ready, supports automatic fax detection and remote inquiry functions\&. You\*(Aqll only need to tell
CapiSuite
some details like your own number, record an own announcement and that\*(Aqs it\&.
.PP
So
CapiSuite
is already equipped for your daily telecommunication needs \- but if you don\*(Aqt like to do the things the way I do \- just change it or completely do it on your own\&. And if you write nice scripts or have changes to my default scripts, I would love to get and perhaps make them available for all users if you don\*(Aqt mind\&.
.SH "SEE ALSO"
.PP
capisuite\&.conf(5), fax\&.conf(5), answering_machine\&.conf(5), capisuitefax(1)
.SH "AUTHOR"
.PP
\fBGernot Hillier\fR <\&gernot@hillier.de\&>
.RS 4
Author.
.RE
